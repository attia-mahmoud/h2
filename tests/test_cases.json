[
  {
    "id": 1,
    "description": "HTTP/2 over TLS uses the 'h2' protocol identifier. The 'h2c' protocol identifier MUST NOT be sent by a client or selected by a server.",
    "tls_enabled": true,
    "tls_protocol": "h2c",
    "client_frames": [
      {
        "type": "HEADERS"
      }
    ]
  },
  {
    "id": 2,
    "description": "Client must send connection preface after TLS establishment",
    "tls_enabled": true,
    "connection_settings_client": {
      "skip_client_connection_preface": true
    },
    "connection_settings_server": {
      "skip_client_connection_preface": true
    },
    "client_frames": [
      {
        "type": "HEADERS"
      }
    ]
  },
  {
    "id": 3,
    "description": "the connection preface starts with the string: PRI * HTTP/2.0\\r\\n\\r\\nSM\\r\\n\\r\\n",
    "connection_settings_client": {
      "incorrect_client_connection_preface": true
    },
    "client_frames": [
      {
        "type": "HEADERS"
      }
    ]
  },
  {
    "id": 4,
    "description": "Client preface must include a SETTINGS frame",
    "connection_settings_client": {
      "skip_initial_settings": true
    },
    "client_frames": [
      {
        "type": "HEADERS"
      }
    ]
  },
  {
    "id": 5,
    "description": "SETTINGS frame MUST be the first frame the server sends in the HTTP/2 connection.",
    "connection_settings_server": {
      "skip_initial_settings": true
    },
    "client_frames": [
      {
        "type": "HEADERS"
      }
    ]
  },
  {
    "id": 6,
    "description": "The SETTINGS frames received from server as part of the connection preface MUST be acknowledged (see Section 6.5.3) after sending the connection preface.",
    "connection_settings_client": {
      "skip_initial_settings_ack": true
    },
    "client_frames": [
      {
        "type": "HEADERS"
      }
    ]
  },
  {
    "id": 7,
    "description": "The SETTINGS frames received from client as part of the connection preface MUST be acknowledged (see Section 6.5.3) after sending the connection preface.",
    "connection_settings_server": {
      "skip_initial_settings_ack": true
    },
    "client_frames": [
      {
        "type": "HEADERS"
      }
    ]
  },
  {
    "id": 8,
    "description": "Values greater than 16,384 MUST NOT be sent unless receiver has set larger SETTINGS_MAX_FRAME_SIZE",
    "client_frames": [
      {
        "type": "HEADERS",
        "flags": {
          "END_STREAM": false
        }
      },
      {
        "type": "DATA",
        "payload_size": 17000
      }
    ]
  },
  {
    "id": 9,
    "description": "The frame type determines the format and semantics of the frame. Implementations MUST ignore and discard frames of unknown types.",
    "client_frames": [
      {
        "type": "UNKNOWN",
        "stream_id": 1,
        "frame_type_id": 99,
        "payload": "test payload"
      }
    ]
  },
  {
    "id": 10,
    "description": "A reserved 1-bit field. The semantics of this bit are undefined, and the bit MUST remain unset (0x00) when sending and MUST be ignored when receiving.",
    "client_frames": [
      {
        "type": "HEADERS",
        "reserved_bit": true
      }
    ]
  },
  {
    "id": 11,
    "description": "Streams initiated by a client MUST use odd-numbered stream identifiers.",
    "client_frames": [
      {
        "type": "HEADERS",
        "stream_id": 2
      }
    ]
  },
  {
    "id": 12,
    "description": "Streams initiated by a server MUST use even-numbered stream identifiers.",
    "client_frames": [
      {
        "type": "HEADERS",
        "stream_id": 1
      }
    ],
    "server_frames": [
      {
        "type": "HEADERS",
        "stream_id": 3
      }
    ]
  },
  {
    "id": 13,
    "description": "The identifier of a newly established stream MUST be numerically greater than all streams that the initiating endpoint has opened or reserved.",
    "client_frames": [
      {
        "type": "HEADERS",
        "flags": {
          "END_STREAM": false
        },
        "stream_id": 5
      },
      {
        "type": "HEADERS",
        "stream_id": 3
      }
    ]
  },
  {
    "id": 14,
    "description": "An endpoint MUST NOT send a RST_STREAM in response to a RST_STREAM frame",
    "client_frames": [
      {
        "type": "HEADERS",
        "flags": {
          "END_STREAM": false
        },
        "stream_id": 1
      },
      {
        "type": "RST_STREAM",
        "flags": {
          "END_STREAM": true
        },
        "stream_id": 1
      }
    ],
    "server_frames": [
      {
        "type": "RST_STREAM",
        "stream_id": 1
      }
    ]
  },
  {
    "id": 15,
    "description": "If a PRIORITY frame is received with a stream identifier of 0x00, the recipient MUST respond with a connection error of type PROTOCOL_ERROR",
    "client_frames": [
      {
        "type": "PRIORITY",
        "stream_id": 0
      }
    ]
  },
  {
    "id": 16,
    "description": "After receiving a RST_STREAM on a stream, the receiver MUST NOT send additional frames for that stream, except for PRIORITY",
    "client_frames": [
      {
        "type": "HEADERS",
        "flags": {
          "END_STREAM": false
        },
        "stream_id": 1
      },
      {
        "type": "RST_STREAM",
        "flags": {
          "END_STREAM": true
        },
        "stream_id": 1
      }
    ],
    "server_frames": [
      {
        "type": "HEADERS",
        "raw_frame": true,
        "stream_id": 1
      }
    ]
  },
  {
    "id": 17,
    "description": "If a RST_STREAM frame is received with a stream identifier of 0x00, the recipient MUST treat this as a connection error (Section 5.4.1) of type PROTOCOL_ERROR.",
    "client_frames": [
      {
        "type": "HEADERS",
        "flags": {
          "END_STREAM": false
        },
        "stream_id": 1
      },
      {
        "type": "RST_STREAM",
        "stream_id": 0
      }
    ]
  },
  {
    "id": 18,
    "description": "When set, the ACK flag indicates that this frame acknowledges receipt and application of the peer's SETTINGS frame. When this bit is set, the frame payload of the SETTINGS frame MUST be empty.",
    "client_frames": [
      {
        "type": "SETTINGS",
        "flags": {
          "ACK": true
        },
        "settings": {
          "MAX_CONCURRENT_STREAMS": 100
        }
      }
    ]
  },
  {
    "id": 19,
    "description": "A RST_STREAM frame with a length other than 4 octets MUST be treated as a connection error (Section 5.4.1) of type FRAME_SIZE_ERROR.",
    "client_frames": [
      {
        "type": "HEADERS",
        "flags": {
          "END_STREAM": false
        },
        "stream_id": 1
      },
      {
        "type": "RST_STREAM",
        "stream_id": 1,
        "payload_length": 5
      }
    ]
  },
  {
    "id": 20,
    "description": "The stream identifier for a SETTINGS frame MUST be zero (0x00).",
    "client_frames": [
      {
        "type": "SETTINGS",
        "stream_id": 1,
        "settings": {
          "MAX_CONCURRENT_STREAMS": 100
        }
      }
    ]
  },
  {
    "id": 21,
    "description": "A SETTINGS frame with a length other than a multiple of 6 octets MUST be treated as a connection error (Section 5.4.1) of type FRAME_SIZE_ERROR.",
    "client_frames": [
      {
        "type": "SETTINGS",
        "extra_bytes": 5,
        "settings": {
          "MAX_CONCURRENT_STREAMS": 100
        }
      }
    ]
  },
  {
    "id": 22,
    "description": "The initial value of SETTINGS_ENABLE_PUSH is 1. Any value other than 0 or 1 MUST be treated as a connection error (Section 5.4.1) of type PROTOCOL_ERROR.",
    "client_frames": [
      {
        "type": "SETTINGS",
        "settings": {
          "ENABLE_PUSH": 2
        }
      }
    ]
  },
  {
    "id": 23,
    "description": "A server MUST NOT explicitly set this value (SETTINGS_ENABLE_PUSH) to 1. A server MAY choose to omit this setting (SETTINGS_ENABLE_PUSH) when it sends a SETTINGS frame, but if a server does include a value, it MUST be 0.",
    "client_frames": [
      {
        "type": "HEADERS"
      }
    ],
    "server_frames": [
      {
        "type": "SETTINGS",
        "settings": {
          "ENABLE_PUSH": 1
        }
      }
    ]
  },
  {
    "id": 24,
    "description": "A server MUST NOT send a PUSH_PROMISE frame if it receives the SETTINGS_ENABLE_PUSH (0x02) parameter set to a value of 0.",
    "client_frames": [
      {
        "type": "SETTINGS",
        "settings": {
          "ENABLE_PUSH": 0
        }
      },
      {
        "type": "HEADERS",
        "stream_id": 1
      }
    ],
    "server_frames": [
      {
        "type": "PUSH_PROMISE",
        "stream_id": 1,
        "promised_stream_id": 2
      }
    ]
  },
  {
    "id": 25,
    "description": "For SETTINGS_INITIAL_WINDOW_SIZE, values above the maximum flow-control window size of 2^31-1 (2147483647) MUST be treated as a connection error (Section 5.4.1) of type FLOW_CONTROL_ERROR.",
    "client_frames": [
      {
        "type": "SETTINGS",
        "settings": {
          "INITIAL_WINDOW_SIZE": 2147483648
        }
      }
    ]
  },
  {
    "id": 26,
    "description": "The value advertised by an endpoint MUST be between initial value (2^14 = 16,384) and maximum allowed frame size (2^24-1 = 16,777,215 octets), inclusive.",
    "client_frames": [
      {
        "type": "SETTINGS",
        "settings": {
          "MAX_FRAME_SIZE": 16777216
        }
      }
    ]
  },
  {
    "id": 27,
    "description": "An endpoint that receives a SETTINGS frame with any unknown or unsupported identifier MUST ignore that setting.",
    "client_frames": [
      {
        "type": "SETTINGS",
        "settings": {
          "12345": 16777216
        }
      }
    ]
  },
  {
    "id": 28,
    "description": "If the Stream Identifier field of a PUSH_PROMISE frame specifies the value 0x00, a recipient MUST respond with a connection error (Section 5.4.1) of type PROTOCOL_ERROR.",
    "client_frames": [
      {
        "type": "SETTINGS",
        "settings": {
          "ENABLE_PUSH": 1
        }
      },
      {
        "type": "HEADERS",
        "stream_id": 1
      }
    ],
    "server_frames": [
      {
        "type": "PUSH_PROMISE",
        "stream_id": 0,
        "promised_stream_id": 2
      }
    ]
  },
  {
    "id": 29,
    "description": "A receiver MUST treat the receipt of a PUSH_PROMISE that promises an illegal stream identifier (Section 5.1.1) as a connection error (Section 5.4.1) of type PROTOCOL_ERROR.",
    "client_frames": [
      {
        "type": "SETTINGS",
        "settings": {
          "ENABLE_PUSH": 1
        }
      },
      {
        "type": "HEADERS",
        "stream_id": 1
      }
    ],
    "server_frames": [
      {
        "type": "PUSH_PROMISE",
        "stream_id": 1,
        "promised_stream_id": 0
      }
    ]
  },
  {
    "id": 30,
    "description": "If a PING frame is received with a Stream Identifier field value other than 0x00, the recipient MUST respond with a connection error (Section 5.4.1) of type PROTOCOL_ERROR.",
    "client_frames": [
      {
        "type": "PING",
        "stream_id": 1
      }
    ]
  },
  {
    "id": 31,
    "description": "Receipt of a PING frame with a length field value other than 8 MUST be treated as a connection error (Section 5.4.1) of type FRAME_SIZE_ERROR.",
    "client_frames": [
      {
        "type": "PING",
        "data": "1234"
      }
    ]
  },
  {
    "id": 32,
    "description": "An endpoint MUST treat a GOAWAY frame with a stream identifier other than 0x00 as a connection error (Section 5.4.1) of type PROTOCOL_ERROR.",
    "client_frames": [
      {
        "type": "GOAWAY",
        "stream_id": 1
      }
    ]
  },
  {
    "id": 33,
    "description": "A receiver MUST treat the receipt of a WINDOW_UPDATE frame with a flow-control window increment of 0 as a stream error (Section 5.4.2) of type PROTOCOL_ERROR.",
    "client_frames": [
      {
        "type": "WINDOW_UPDATE",
        "increment": 0
      }
    ]
  },
  {
    "id": 34,
    "description": "A sender MUST NOT allow a flow-control window to exceed 2^31-1 octets. If a sender receives a WINDOW_UPDATE that causes a flow-control window to exceed this maximum, it MUST terminate either the stream or the connection, as appropriate.",
    "client_frames": [
      {
        "type": "WINDOW_UPDATE",
        "increment": 2147483647
      }
    ]
  },
  {
    "id": 35,
    "description": "An endpoint MUST treat a change to SETTINGS_INITIAL_WINDOW_SIZE that causes any flow-control window to exceed the maximum size as a connection error (Section 5.4.1) of type FLOW_CONTROL_ERROR.",
    "client_frames": [
      {
        "type": "SETTINGS",
        "settings": {
          "INITIAL_WINDOW_SIZE": 2147483648
        }
      }
    ]
  },
  {
    "id": 36,
    "description": "If a CONTINUATION frame is received with a Stream Identifier field of 0x00, the recipient MUST respond with a connection error (Section 5.4.1) of type PROTOCOL_ERROR.",
    "client_frames": [
      {
        "type": "HEADERS",
        "stream_id": 1,
        "flags": {
          "END_STREAM": false,
          "END_HEADERS": false
        }
      },
      {
        "type": "CONTINUATION",
        "stream_id": 0
      }
    ]
  },
  {
    "id": 37,
    "description": "A CONTINUATION frame MUST be preceded by a HEADERS, PUSH_PROMISE or CONTINUATION frame without the END_HEADERS flag set.",
    "client_frames": [
      {
        "type": "HEADERS",
        "stream_id": 1,
        "flags": {
          "END_STREAM": false
        }
      },
      {
        "type": "CONTINUATION",
        "stream_id": 1
      }
    ]
  },
  {
    "id": 38,
    "description": "A CONTINUATION frame MUST be preceded by a HEADERS, PUSH_PROMISE or CONTINUATION frame without the END_HEADERS flag set.",
    "client_frames": [
      {
        "type": "HEADERS",
        "stream_id": 1
      }
    ],
    "server_frames": [
      {
        "type": "PUSH_PROMISE",
        "stream_id": 1,
        "promised_stream_id": 2,
        "flags": {
          "END_STREAM": false,
          "END_HEADERS": true
        }
      },
      {
        "type": "CONTINUATION",
        "stream_id": 2
      }
    ]
  },
  {
    "id": 39,
    "description": "A CONTINUATION frame MUST be preceded by a HEADERS, PUSH_PROMISE or CONTINUATION frame without the END_HEADERS flag set.",
    "client_frames": [
      {
        "type": "HEADERS",
        "stream_id": 1,
        "flags": {
          "END_STREAM": false,
          "END_HEADERS": false
        }
      },
      {
        "type": "CONTINUATION",
        "stream_id": 1,
        "headers": {
          "accept": "application/json"
        }
      },
      {
        "type": "CONTINUATION",
        "stream_id": 1
      }
    ]
  },
  {
    "id": 40,
    "description": "Trailers MUST NOT include pseudo-header fields (Section 8.3).",
    "client_frames": [
      {
        "type": "HEADERS",
        "stream_id": 1,
        "flags": {
          "END_STREAM": false
        }
      },
      {
        "type": "DATA",
        "stream_id": 1,
        "flags": {
          "END_STREAM": false
        }
      },
      {
        "type": "TRAILERS",
        "stream_id": 1,
        "headers": {
          ":path": "/"
        }
      }
    ]
  }
]
