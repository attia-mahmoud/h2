metadata:
  version: "1.0"
  spec_reference: "RFC 9113"

test_suites:
  - name: "Starting HTTP/2 for HTTPS URIs"
    section: "3.2"
    cases:
      - id: 1
        description: "Client must not send h2c protocol identifier"
        connection_settings:
          client_side: true
          header_encoding: "utf-8"
          enable_push: false
          initial_window_size: 65535
          max_frame_size: 16384
        headers:
          pseudo_headers:
            method: "GET"
            scheme: "http"
            path: "/"
            authority: "localhost"
          regular_headers:
            upgrade: "h2c"
            http2-settings: "AAMAAABkAAQAAP__"
            connection: "Upgrade, HTTP2-Settings"
        frames:
          - type: "SETTINGS"
            flags: []
            settings: {}
          - type: "HEADERS"
            flags: ["END_STREAM"]
            stream_id: 1

      - id: 2
        description: "Client and server must send connection preface after TLS"
        connection_settings:
          client_side: true
          header_encoding: "utf-8"
          tls_enabled: true
        preface:
          client_preface: "PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n"
          verify_server_preface: true
        headers:
          pseudo_headers:
            method: "GET"
            scheme: "https"  # Changed to https since we're using TLS
            path: "/"
            authority: "localhost"
          regular_headers:
            user-agent: "test-client"
        frames:
          - type: "SETTINGS"
            flags: []
            settings: {}

  - name: "Starting HTTP/2 for HTTPS URIs"
    section: "3.2"
    cases:
      - id: 1
        description: "Client must not send h2c protocol identifier"
        connection_settings:
          client_side: true
          header_encoding: "utf-8"
          enable_push: false
          initial_window_size: 65535
          max_frame_size: 16384
        headers:
          pseudo_headers:
            method: "GET"
            scheme: "http"
            path: "/"
            authority: "localhost"
          regular_headers:
            upgrade: "h2c"
            http2-settings: "AAMAAABkAAQAAP__"
            connection: "Upgrade, HTTP2-Settings"
        frames:
          - type: "SETTINGS"
            flags: []
            settings: {}
          - type: "HEADERS"
            flags: ["END_STREAM"]
            stream_id: 1

  - name: "Connection-Specific Header Fields"
    section: "8.2.2"
    cases:
      - id: 147
        description: "Send connection-specific header field in a request that should trigger PROTOCOL_ERROR"
        connection_settings:
          client_side: true
          header_encoding: "utf-8"
        headers:
          pseudo_headers:
            method: "GET"
            scheme: "http"
            path: "/"
            authority: "localhost"
          regular_headers:
            connection: "keep-alive"
        frames:
          - type: "HEADERS"
            flags: ["END_STREAM"]
            stream_id: 1

  - name: "HTTP Fields"
    section: "8.2"
    cases:
      - id: 140
        description: "Field names MUST be converted to lowercase when constructing an HTTP/2 message"
        connection_settings:
          client_side: true
          header_encoding: "utf-8"
        headers:
          pseudo_headers:
            method: "GET"
            scheme: "http"
            path: "/"
            authority: "localhost"
          regular_headers:
            User-Agent: "python-h2"  # Uppercase header name
        frames:
          - type: "HEADERS"
            flags: ["END_STREAM"]
            stream_id: 1

      - id: 141
        description: "A field name MUST NOT contain characters in the ranges 0x00-0x20, 0x41-0x5a, or 0x7f-0xff"
        connection_settings:
          client_side: true
          header_encoding: "utf-8"
        headers:
          pseudo_headers:
            method: "GET"
            scheme: "http"
            path: "/"
            authority: "localhost"
          regular_headers:
            "user\u0000agent": "test"
        frames:
          - type: "HEADERS"
            flags: ["END_STREAM"]
            stream_id: 1

  - name: "HTTP Control Data"
    section: "8.3"
    cases:
      - id: 157
        description: "pseudo-header fields MUST appear in a field block before all regular field lines"
        connection_settings:
          client_side: true
          header_encoding: "utf-8"
        headers:
          pseudo_headers:
            method: "GET"
            scheme: "http"
            authority: "localhost"
            path: "/"
          regular_headers:
            user-agent: "test"
        frames:
          - type: "HEADERS"
            flags: ["END_STREAM"]
            stream_id: 1

      - id: 152
        description: "Endpoints MUST NOT generate pseudo-header fields other than those defined in this document"
        connection_settings:
          client_side: true
          header_encoding: "utf-8"
        headers:
          pseudo_headers:
            method: "GET"
            scheme: "http"
            authority: "localhost"
            path: "/"
          regular_headers:
            ":user-agent": "test"
        frames:
          - type: "HEADERS"
            flags: ["END_STREAM"]
            stream_id: 1